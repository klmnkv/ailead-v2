version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ailead_postgres
    environment:
      POSTGRES_DB: ailead
      POSTGRES_USER: ailead
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ailead_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ailead"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ailead-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: ailead_redis
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ailead-network

  # API Server
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ailead_api
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgres://ailead:${DB_PASSWORD:-ailead_password}@postgres:5432/ailead
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-dev_jwt_secret}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-dev_encryption_key_32_chars_len}
      LOG_LEVEL: info
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api/logs:/app/logs
      - ./api/src:/app/src  # Hot reload для разработки
    networks:
      - ailead-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ailead-network:
    driver: bridge