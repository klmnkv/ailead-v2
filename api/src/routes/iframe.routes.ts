import { Router } from 'express';
import { logger } from '../utils/logger.js';

const router = Router();

/**
 * –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º
 * GET /iframe/panel/:account_id
 */
router.get('/panel/:account_id', async (req, res) => {
    const { account_id } = req.params;

    logger.info('üîß Admin panel opened', { account_id });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    res.send(`
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>AI.LEAD - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º</title>
            <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
            <style>
                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                }
                
                body {
                    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
                    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
                    color: #2d3748;
                    font-size: 14px;
                    line-height: 1.5;
                    height: 100vh;
                    overflow: hidden;
                }
                
                .container {
                    display: flex;
                    flex-direction: column;
                    height: 100%;
                    max-width: 1200px;
                    margin: 0 auto;
                    background: white;
                    box-shadow: 0 20px 60px rgba(0,0,0,0.1);
                }
                
                /* Header */
                .header {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    padding: 20px 24px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    color: white;
                }
                
                .header-left {
                    display: flex;
                    align-items: center;
                    gap: 12px;
                }
                
                .logo {
                    font-size: 24px;
                    font-weight: 700;
                    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
                }
                
                .header-title {
                    font-size: 14px;
                    opacity: 0.9;
                }
                
                .status-badge {
                    display: flex;
                    align-items: center;
                    gap: 8px;
                    padding: 8px 16px;
                    background: rgba(255,255,255,0.2);
                    backdrop-filter: blur(10px);
                    border-radius: 20px;
                    font-size: 13px;
                    font-weight: 500;
                }
                
                .status-dot {
                    width: 8px;
                    height: 8px;
                    background: #10b981;
                    border-radius: 50%;
                    animation: pulse 2s infinite;
                    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);
                }
                
                @keyframes pulse {
                    0% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); }
                    50% { box-shadow: 0 0 0 8px rgba(16, 185, 129, 0); }
                    100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }
                }
                
                /* Main Content */
                .main-content {
                    flex: 1;
                    overflow-y: auto;
                    padding: 24px;
                    background: #f8fafb;
                }
                
                .settings-section {
                    background: white;
                    border-radius: 12px;
                    margin-bottom: 20px;
                    overflow: hidden;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
                    transition: all 0.3s;
                }
                
                .settings-section:hover {
                    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                }
                
                .section-header {
                    padding: 16px 20px;
                    background: linear-gradient(to right, #f8fafc, white);
                    border-bottom: 1px solid #e2e8f0;
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                }
                
                .section-title {
                    font-weight: 600;
                    color: #1a202c;
                    font-size: 15px;
                    display: flex;
                    align-items: center;
                    gap: 8px;
                }
                
                .section-content {
                    padding: 20px;
                }
                
                .form-group {
                    margin-bottom: 20px;
                }
                
                .form-group:last-child {
                    margin-bottom: 0;
                }
                
                .form-label {
                    display: block;
                    font-weight: 500;
                    color: #2d3748;
                    margin-bottom: 6px;
                    font-size: 13px;
                }
                
                .form-input {
                    width: 100%;
                    padding: 10px 12px;
                    border: 2px solid #e2e8f0;
                    border-radius: 8px;
                    font-size: 14px;
                    font-family: inherit;
                    transition: all 0.2s;
                }
                
                .form-input:focus {
                    outline: none;
                    border-color: #667eea;
                    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
                }
                
                .form-textarea {
                    min-height: 100px;
                    resize: vertical;
                }
                
                .form-select {
                    width: 100%;
                    padding: 10px 12px;
                    border: 2px solid #e2e8f0;
                    border-radius: 8px;
                    background: white;
                    font-size: 14px;
                    cursor: pointer;
                    font-family: inherit;
                }
                
                /* Info Box */
                .info-box {
                    background: linear-gradient(135deg, #e0e7ff 0%, #f0f4ff 100%);
                    border-left: 4px solid #667eea;
                    border-radius: 8px;
                    padding: 12px;
                    font-size: 13px;
                    color: #4338ca;
                    margin-top: 8px;
                }
                
                .warning-box {
                    background: linear-gradient(135deg, #fef3c7 0%, #fffbeb 100%);
                    border-left: 4px solid #f59e0b;
                    border-radius: 8px;
                    padding: 12px;
                    font-size: 13px;
                    color: #c2410c;
                    margin-top: 8px;
                }
                
                /* Buttons */
                .btn {
                    padding: 10px 16px;
                    border-radius: 8px;
                    font-weight: 500;
                    font-size: 14px;
                    cursor: pointer;
                    transition: all 0.2s;
                    border: none;
                    font-family: inherit;
                    display: inline-flex;
                    align-items: center;
                    gap: 6px;
                }
                
                .btn-primary {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                }
                
                .btn-primary:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
                }
                
                .btn-secondary {
                    background: #f7fafc;
                    color: #4a5568;
                    border: 2px solid #e2e8f0;
                }
                
                .btn-secondary:hover {
                    background: #edf2f7;
                    border-color: #cbd5e0;
                }
                
                /* Footer */
                .footer {
                    background: white;
                    border-top: 2px solid #e2e8f0;
                    padding: 16px 24px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }
                
                .footer-left {
                    display: flex;
                    gap: 12px;
                    align-items: center;
                }
                
                .footer-right {
                    display: flex;
                    gap: 12px;
                }
                
                .save-status {
                    font-size: 13px;
                    color: #10b981;
                    display: flex;
                    align-items: center;
                    gap: 6px;
                    padding: 6px 12px;
                    background: #f0fdf4;
                    border-radius: 6px;
                }
                
                /* Loading */
                .loading {
                    display: inline-block;
                    width: 16px;
                    height: 16px;
                    border: 2px solid #e2e8f0;
                    border-top-color: #667eea;
                    border-radius: 50%;
                    animation: spin 0.8s linear infinite;
                }
                
                @keyframes spin {
                    to { transform: rotate(360deg); }
                }

                /* Range Input */
                .form-range {
                    width: 100%;
                    height: 6px;
                    border-radius: 3px;
                    background: #e2e8f0;
                    outline: none;
                    -webkit-appearance: none;
                }

                .form-range::-webkit-slider-thumb {
                    -webkit-appearance: none;
                    appearance: none;
                    width: 18px;
                    height: 18px;
                    border-radius: 50%;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    cursor: pointer;
                    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.4);
                }

                .form-range::-moz-range-thumb {
                    width: 18px;
                    height: 18px;
                    border-radius: 50%;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    cursor: pointer;
                    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.4);
                    border: none;
                }
                
                /* Toggle Switch */
                .toggle-container {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    padding: 14px;
                    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
                    border-radius: 8px;
                    transition: all 0.3s;
                }
                
                .toggle-container:hover {
                    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
                }
                
                .toggle-label {
                    font-weight: 500;
                    color: #2d3748;
                }
                
                .toggle-switch {
                    width: 48px;
                    height: 26px;
                    background: #e2e8f0;
                    border-radius: 13px;
                    position: relative;
                    cursor: pointer;
                    transition: background 0.3s;
                }
                
                .toggle-switch.active {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                }
                
                .toggle-switch::after {
                    content: '';
                    width: 22px;
                    height: 22px;
                    background: white;
                    border-radius: 50%;
                    position: absolute;
                    top: 2px;
                    left: 2px;
                    transition: transform 0.3s;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
                }
                
                .toggle-switch.active::after {
                    transform: translateX(22px);
                }
                
                /* Stats */
                .stats-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                    gap: 16px;
                }
                
                .stat-card {
                    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
                    border: 2px solid #e2e8f0;
                    border-radius: 12px;
                    padding: 20px;
                    transition: all 0.3s;
                }
                
                .stat-card:hover {
                    transform: translateY(-4px);
                    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
                    border-color: #667eea;
                }
                
                .stat-label {
                    font-size: 12px;
                    color: #718096;
                    margin-bottom: 6px;
                    text-transform: uppercase;
                    letter-spacing: 0.5px;
                }
                
                .stat-value {
                    font-size: 28px;
                    font-weight: 700;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                    background-clip: text;
                }
                
                .stat-change {
                    font-size: 12px;
                    margin-top: 6px;
                    font-weight: 500;
                }
                
                .stat-change.positive {
                    color: #10b981;
                }
                
                /* Scrollbar */
                ::-webkit-scrollbar {
                    width: 10px;
                }
                
                ::-webkit-scrollbar-track {
                    background: #f1f5f9;
                }
                
                ::-webkit-scrollbar-thumb {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    border-radius: 5px;
                }
                
                ::-webkit-scrollbar-thumb:hover {
                    background: linear-gradient(135deg, #5568d3 0%, #6a3f8c 100%);
                }
            </style>
        </head>
        <body>
            <div class="container">
                <!-- Header -->
                <div class="header">
                    <div class="header-left">
                        <div class="logo">ü§ñ AI.LEAD</div>
                        <div class="header-title">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</div>
                    </div>
                    <div class="status-badge">
                        <div class="status-dot"></div>
                        –ê–∫—Ç–∏–≤–µ–Ω
                    </div>
                </div>
                
                <!-- Main Content -->
                <div class="main-content">
                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="settings-section">
                        <div class="section-header">
                            <div class="section-title">
                                üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
                            </div>
                        </div>
                        <div class="section-content">
                            <div class="stats-grid">
                                <div class="stat-card">
                                    <div class="stat-label">–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ª–∏–¥–æ–≤</div>
                                    <div class="stat-value">12</div>
                                    <div class="stat-change positive">‚Üë +25% –æ—Ç –≤—á–µ—Ä–∞</div>
                                </div>
                                <div class="stat-card">
                                    <div class="stat-label">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π</div>
                                    <div class="stat-value">48</div>
                                    <div class="stat-change positive">‚Üë +15%</div>
                                </div>
                                <div class="stat-card">
                                    <div class="stat-label">–£—Å–ø–µ—à–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤</div>
                                    <div class="stat-value">9</div>
                                    <div class="stat-change positive">‚Üë 75%</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
                    <div class="settings-section">
                        <div class="section-header">
                            <div class="section-title">‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</div>
                        </div>
                        <div class="section-content">
                            <div class="form-group">
                                <div class="toggle-container">
                                    <div class="toggle-label">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –ª–∏–¥–æ–≤</div>
                                    <div class="toggle-switch active" onclick="toggleSwitch(this)"></div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">–ü—Ä–æ–º–ø—Ç –¥–ª—è AI-–±–æ—Ç–∞</label>
                                <textarea 
                                    class="form-input form-textarea" 
                                    placeholder="–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –≤–µ—Å—Ç–∏ —Å–µ–±—è –±–æ—Ç..."
                                >–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ—á—å –∫–ª–∏–µ–Ω—Ç—É —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–æ–≤–µ—Å—Ç–∏ –¥–æ –ø–æ–∫—É–ø–∫–∏. –í–µ–¥–∏ —Å–µ–±—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –Ω–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ.</textarea>
                                <div class="info-box">
                                    üí° –ü—Ä–æ–º–ø—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
                                </div>
                            </div>
                            
                            <!-- AI Integration Settings -->
                            <div class="form-group">
                                <div class="toggle-container">
                                    <div class="toggle-label">ü§ñ –í–∫–ª—é—á–∏—Ç—å AI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é</div>
                                    <div class="toggle-switch" id="ai-enabled-toggle" onclick="toggleAI(this)"></div>
                                </div>
                                <div class="info-box" style="margin-top: 8px;">
                                    üí° –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
                                </div>
                            </div>

                            <div id="ai-settings" style="display: none;">
                                <div class="form-group">
                                    <label class="form-label">–ü—Ä–æ–≤–∞–π–¥–µ—Ä AI</label>
                                    <select class="form-select" id="ai-provider" onchange="updateModelsList()">
                                        <option value="openai">OpenAI (GPT)</option>
                                        <option value="anthropic">Anthropic (Claude)</option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">API –ö–ª—é—á</label>
                                    <input
                                        type="password"
                                        id="ai-api-key"
                                        class="form-input"
                                        placeholder="sk-..."
                                    />
                                    <div class="info-box" style="margin-top: 8px;">
                                        üîí –í–∞—à API –∫–ª—é—á —Ö—Ä–∞–Ω–∏—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">–ú–æ–¥–µ–ª—å</label>
                                    <select class="form-select" id="ai-model">
                                        <option value="gpt-3.5-turbo">GPT-3.5 Turbo (–±—ã—Å—Ç—Ä–µ–µ, –¥–µ—à–µ–≤–ª–µ)</option>
                                        <option value="gpt-4">GPT-4 (–ª—É—á—à–µ –∫–∞—á–µ—Å—Ç–≤–æ)</option>
                                        <option value="gpt-4-turbo-preview">GPT-4 Turbo</option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å): <span id="temperature-value">0.7</span></label>
                                    <input
                                        type="range"
                                        id="ai-temperature"
                                        class="form-range"
                                        min="0"
                                        max="2"
                                        step="0.1"
                                        value="0.7"
                                        oninput="updateTemperature(this.value)"
                                    />
                                    <div class="info-box" style="margin-top: 8px;">
                                        üí° 0 = –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, 2 = –±–æ–ª–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ (—Ç–æ–∫–µ–Ω—ã)</label>
                                    <input
                                        type="number"
                                        id="ai-max-tokens"
                                        class="form-input"
                                        value="500"
                                        min="50"
                                        max="4000"
                                    />
                                    <div class="info-box" style="margin-top: 8px;">
                                        üí° 1 —Ç–æ–∫–µ–Ω ‚âà 4 —Å–∏–º–≤–æ–ª–∞. 500 —Ç–æ–∫–µ–Ω–æ–≤ ‚âà 2000 —Å–∏–º–≤–æ–ª–æ–≤
                                    </div>
                                </div>

                                <div class="form-group">
                                    <button class="btn btn-secondary" onclick="testAIConnection()">
                                        üß™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
                                    </button>
                                    <span id="ai-test-result" style="margin-left: 10px;"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- –£—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ -->
                    <div class="settings-section">
                        <div class="section-header">
                            <div class="section-title">üîÑ –ü–µ—Ä–µ–¥–∞—á–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É</div>
                        </div>
                        <div class="section-content">
                            <div class="form-group">
                                <label class="form-label">–ö–æ–≥–¥–∞ –ø–µ—Ä–µ–¥–∞—Ç—å –ª–∏–¥ –º–µ–Ω–µ–¥–∂–µ—Ä—É?</label>
                                <textarea 
                                    class="form-input form-textarea"
                                    placeholder="–û–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏—è..."
                                >–ü–µ—Ä–µ–¥–∞–≤–∞–π –ª–∏–¥ –º–µ–Ω–µ–¥–∂–µ—Ä—É, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç:
- –ü—Ä–æ—Å–∏—Ç –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —á–µ–ª–æ–≤–µ–∫–æ–º
- –•–æ—á–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑
- –ó–∞–¥–∞–µ—Ç —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ù–µ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ 2-3 –ø–æ–ø—ã—Ç–æ–∫</textarea>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label">–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ</label>
                                <input 
                                    type="text" 
                                    class="form-input" 
                                    value="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—â–µ–Ω–∏–µ! –°–µ–π—á–∞—Å –∫ –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä."
                                    placeholder="–ß—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É"
                                />
                            </div>
                            
                            <div class="warning-box">
                                ‚ö†Ô∏è –ü–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –±–æ—Ç –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —ç—Ç–æ–º—É –ª–∏–¥—É
                            </div>
                        </div>
                    </div>
                    
                    <!-- –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ —Ü–µ–ª–∏ -->
                    <div class="settings-section">
                        <div class="section-header">
                            <div class="section-title">üéØ –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–∏</div>
                        </div>
                        <div class="section-content">
                            <div class="form-group">
                                <label class="form-label">–¶–µ–ª—å –±–æ—Ç–∞</label>
                                <textarea 
                                    class="form-input form-textarea"
                                    placeholder="–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫—É—é —Ü–µ–ª—å –¥–æ–ª–∂–µ–Ω –¥–æ—Å—Ç–∏—á—å –±–æ—Ç..."
                                >–ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ª–∏–¥: —É–∑–Ω–∞—Ç—å –±—é–¥–∂–µ—Ç, —Å—Ä–æ—á–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–¥–µ–ª–∫–∏.</textarea>
                            </div>
                            
                            <div class="form-group">
                                <div class="toggle-container">
                                    <div class="toggle-label">–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ª–∏–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø</div>
                                    <div class="toggle-switch active" onclick="toggleSwitch(this)"></div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <div class="toggle-container">
                                    <div class="toggle-label">–ù–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</div>
                                    <div class="toggle-switch active" onclick="toggleSwitch(this)"></div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <div class="toggle-container">
                                    <div class="toggle-label">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É</div>
                                    <div class="toggle-switch active" onclick="toggleSwitch(this)"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Footer -->
                <div class="footer">
                    <div class="footer-left">
                        <div class="save-status">
                            <span>‚úì</span> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ 14:25
                        </div>
                    </div>
                    <div class="footer-right">
                        <button class="btn btn-secondary" onclick="testBot()">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button class="btn btn-primary" onclick="saveSettings()">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                </div>
            </div>
            
            <script>
                function toggleSwitch(element) {
                    element.classList.toggle('active');
                }

                function toggleAI(element) {
                    element.classList.toggle('active');
                    const aiSettings = document.getElementById('ai-settings');
                    if (element.classList.contains('active')) {
                        aiSettings.style.display = 'block';
                    } else {
                        aiSettings.style.display = 'none';
                    }
                }

                function updateTemperature(value) {
                    document.getElementById('temperature-value').textContent = value;
                }

                async function updateModelsList() {
                    const provider = document.getElementById('ai-provider').value;
                    const modelSelect = document.getElementById('ai-model');

                    try {
                        const response = await fetch('/api/bot/ai/models?provider=' + provider);
                        const data = await response.json();

                        modelSelect.innerHTML = '';
                        data.models.forEach(model => {
                            const option = document.createElement('option');
                            option.value = model.value;
                            option.textContent = model.label;
                            modelSelect.appendChild(option);
                        });
                    } catch (error) {
                        console.error('Error fetching models:', error);
                    }
                }

                async function testAIConnection() {
                    const resultSpan = document.getElementById('ai-test-result');
                    resultSpan.textContent = '‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞...';
                    resultSpan.style.color = '#666';

                    const aiConfig = {
                        enabled: true,
                        provider: document.getElementById('ai-provider').value,
                        model: document.getElementById('ai-model').value,
                        api_key: document.getElementById('ai-api-key').value,
                        temperature: parseFloat(document.getElementById('ai-temperature').value),
                        max_tokens: parseInt(document.getElementById('ai-max-tokens').value)
                    };

                    try {
                        const response = await fetch('/api/bot/ai/test', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ ai: aiConfig })
                        });

                        const data = await response.json();

                        if (response.ok && data.success) {
                            resultSpan.textContent = '‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ (' + data.duration + 'ms)';
                            resultSpan.style.color = '#22c55e';
                        } else {
                            resultSpan.textContent = '‚úó –û—à–∏–±–∫–∞: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
                            resultSpan.style.color = '#ef4444';
                        }
                    } catch (error) {
                        resultSpan.textContent = '‚úó –û—à–∏–±–∫–∞: ' + error.message;
                        resultSpan.style.color = '#ef4444';
                    }
                }

                async function saveSettings() {
                    const saveBtn = event.target;
                    const originalHTML = saveBtn.innerHTML;

                    saveBtn.innerHTML = '<span class="loading"></span> –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
                    saveBtn.disabled = true;

                    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    const aiEnabled = document.getElementById('ai-enabled-toggle').classList.contains('active');
                    const config = {
                        auto_process: true,
                        prompt: document.querySelector('textarea.form-textarea').value,
                        ai: {
                            enabled: aiEnabled,
                            provider: document.getElementById('ai-provider').value,
                            model: document.getElementById('ai-model').value,
                            api_key: document.getElementById('ai-api-key').value,
                            temperature: parseFloat(document.getElementById('ai-temperature').value),
                            max_tokens: parseInt(document.getElementById('ai-max-tokens').value)
                        }
                    };

                    try {
                        const response = await fetch('/api/bot/config', {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(config)
                        });

                        if (response.ok) {
                            saveBtn.innerHTML = '‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ';
                            setTimeout(() => {
                                saveBtn.innerHTML = originalHTML;
                                saveBtn.disabled = false;
                            }, 1500);
                        } else {
                            throw new Error('Failed to save');
                        }
                    } catch (error) {
                        saveBtn.innerHTML = '‚úó –û—à–∏–±–∫–∞';
                        setTimeout(() => {
                            saveBtn.innerHTML = originalHTML;
                            saveBtn.disabled = false;
                        }, 2000);
                    }
                }

                // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                async function loadSettings() {
                    try {
                        const response = await fetch('/api/bot/config');
                        const config = await response.json();

                        if (config.prompt) {
                            document.querySelector('textarea.form-textarea').value = config.prompt;
                        }

                        if (config.ai) {
                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è AI –Ω–∞—Å—Ç—Ä–æ–µ–∫
                            const aiToggle = document.getElementById('ai-enabled-toggle');
                            if (config.ai.enabled) {
                                aiToggle.classList.add('active');
                                document.getElementById('ai-settings').style.display = 'block';
                            }

                            document.getElementById('ai-provider').value = config.ai.provider || 'openai';
                            document.getElementById('ai-model').value = config.ai.model || 'gpt-3.5-turbo';
                            document.getElementById('ai-api-key').value = config.ai.api_key || '';
                            document.getElementById('ai-temperature').value = config.ai.temperature || 0.7;
                            document.getElementById('ai-max-tokens').value = config.ai.max_tokens || 500;

                            updateTemperature(config.ai.temperature || 0.7);
                        }
                    } catch (error) {
                        console.error('Error loading settings:', error);
                    }
                }

                // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
                window.addEventListener('DOMContentLoaded', loadSettings);

                function testBot() {
                    alert('–§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
                }
                
                // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                setInterval(() => {
                    const status = document.querySelector('.save-status');
                    const time = new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
                    status.innerHTML = \`<span>‚úì</span> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ \${time}\`;
                }, 30000);
            </script>
        </body>
        </html>
    `);
});

export default router;