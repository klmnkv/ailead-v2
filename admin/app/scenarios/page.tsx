'use client';

import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import {
  Workflow,
  Plus,
  Edit,
  Trash2,
  Play,
  Pause,
  Copy,
  Loader,
  AlertCircle,
} from 'lucide-react';

// Mock API –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API)
interface Scenario {
  id: number;
  name: string;
  description: string;
  is_active: boolean;
  steps: number;
  created_at: string;
  last_run?: string;
  runs_count: number;
}

export default function ScenariosPage() {
  const [isCreating, setIsCreating] = useState(false);
  const queryClient = useQueryClient();

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
  const { data: scenarios, isLoading } = useQuery({
    queryKey: ['scenarios'],
    queryFn: async () => {
      // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API
      return mockScenarios;
    },
  });

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">–°—Ü–µ–Ω–∞—Ä–∏–∏</h1>
          <p className="text-gray-600 mt-2">
            –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
          </p>
        </div>

        <button
          onClick={() => setIsCreating(true)}
          className="flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition"
        >
          <Plus className="w-5 h-5" />
          <span>–°–æ–∑–¥–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π</span>
        </button>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <StatCard
          title="–í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"
          value={scenarios?.length || 0}
          icon={Workflow}
          color="blue"
        />
        <StatCard
          title="–ê–∫—Ç–∏–≤–Ω—ã—Ö"
          value={scenarios?.filter((s) => s.is_active).length || 0}
          icon={Play}
          color="green"
        />
        <StatCard
          title="–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"
          value={scenarios?.filter((s) => !s.is_active).length || 0}
          icon={Pause}
          color="gray"
        />
        <StatCard
          title="–í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤"
          value={scenarios?.reduce((sum, s) => sum + s.runs_count, 0) || 0}
          icon={Workflow}
          color="purple"
        />
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ */}
      {isLoading ? (
        <div className="flex items-center justify-center py-12">
          <Loader className="w-8 h-8 animate-spin text-blue-600" />
        </div>
      ) : scenarios && scenarios.length > 0 ? (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {scenarios.map((scenario) => (
            <ScenarioCard key={scenario.id} scenario={scenario} />
          ))}
        </div>
      ) : (
        <div className="bg-gray-50 rounded-lg p-12 text-center">
          <Workflow className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            –ù–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
          </h3>
          <p className="text-gray-600 mb-4">
            –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
          </p>
          <button
            onClick={() => setIsCreating(true)}
            className="inline-flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition"
          >
            <Plus className="w-5 h-5" />
            <span>–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π</span>
          </button>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞) */}
      {isCreating && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-8 max-w-2xl w-full mx-4">
            <h2 className="text-2xl font-bold text-gray-900 mb-4">
              –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
            </h2>
            <p className="text-gray-600 mb-6">
              üöß –í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
            </p>
            <div className="flex justify-end space-x-4">
              <button
                onClick={() => setIsCreating(false)}
                className="px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

// ============================================
// –ö–û–ú–ü–û–ù–ï–ù–¢–´
// ============================================

interface StatCardProps {
  title: string;
  value: number;
  icon: React.ElementType;
  color: string;
}

function StatCard({ title, value, icon: Icon, color }: StatCardProps) {
  const colorClasses: Record<string, string> = {
    blue: 'bg-blue-100 text-blue-600',
    green: 'bg-green-100 text-green-600',
    gray: 'bg-gray-100 text-gray-600',
    purple: 'bg-purple-100 text-purple-600',
  };

  return (
    <div className="bg-white rounded-lg shadow p-6">
      <div className="flex items-center justify-between mb-4">
        <div className={`p-3 rounded-lg ${colorClasses[color]}`}>
          <Icon className="w-6 h-6" />
        </div>
      </div>
      <p className="text-sm text-gray-600 mb-1">{title}</p>
      <p className="text-3xl font-bold text-gray-900">{value}</p>
    </div>
  );
}

function ScenarioCard({ scenario }: { scenario: Scenario }) {
  return (
    <div className="bg-white rounded-lg shadow hover:shadow-lg transition p-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å */}
      <div className="flex items-start justify-between mb-4">
        <div className="flex-1">
          <h3 className="text-lg font-bold text-gray-900 mb-1">
            {scenario.name}
          </h3>
          <p className="text-sm text-gray-600">{scenario.description}</p>
        </div>
        <span
          className={`px-3 py-1 rounded-full text-xs font-medium ${
            scenario.is_active
              ? 'bg-green-100 text-green-800'
              : 'bg-gray-100 text-gray-800'
          }`}
        >
          {scenario.is_active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
        </span>
      </div>

      {/* –ú–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid grid-cols-2 gap-4 mb-4 py-4 border-t border-b border-gray-200">
        <div>
          <p className="text-xs text-gray-500 mb-1">–®–∞–≥–æ–≤</p>
          <p className="text-lg font-semibold text-gray-900">{scenario.steps}</p>
        </div>
        <div>
          <p className="text-xs text-gray-500 mb-1">–ó–∞–ø—É—Å–∫–æ–≤</p>
          <p className="text-lg font-semibold text-gray-900">
            {scenario.runs_count}
          </p>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="flex items-center justify-between">
        <div className="flex space-x-2">
          <button
            className="p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition"
            title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
          >
            <Edit className="w-4 h-4" />
          </button>
          <button
            className="p-2 text-gray-600 hover:text-purple-600 hover:bg-purple-50 rounded-lg transition"
            title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å"
          >
            <Copy className="w-4 h-4" />
          </button>
          <button
            className="p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition"
            title="–£–¥–∞–ª–∏—Ç—å"
          >
            <Trash2 className="w-4 h-4" />
          </button>
        </div>

        <button
          className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition ${
            scenario.is_active
              ? 'bg-gray-100 text-gray-700 hover:bg-gray-200'
              : 'bg-green-100 text-green-700 hover:bg-green-200'
          }`}
        >
          {scenario.is_active ? (
            <>
              <Pause className="w-4 h-4" />
              <span>–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</span>
            </>
          ) : (
            <>
              <Play className="w-4 h-4" />
              <span>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</span>
            </>
          )}
        </button>
      </div>
    </div>
  );
}

// ============================================
// MOCK DATA
// ============================================

const mockScenarios: Scenario[] = [
  {
    id: 1,
    name: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ª–∏–¥–æ–≤',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤—ã–º –ª–∏–¥–∞–º',
    is_active: true,
    steps: 3,
    created_at: '2024-01-15T10:00:00Z',
    last_run: '2024-01-20T14:30:00Z',
    runs_count: 127,
  },
  {
    id: 2,
    name: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ',
    description: '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 1 —á–∞—Å –¥–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏',
    is_active: true,
    steps: 5,
    created_at: '2024-01-10T09:00:00Z',
    last_run: '2024-01-20T11:00:00Z',
    runs_count: 89,
  },
  {
    id: 3,
    name: '–†–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ö–æ–ª–æ–¥–Ω—ã—Ö –ª–∏–¥–æ–≤',
    description: '–ü–æ–ø—ã—Ç–∫–∞ –≤–µ—Ä–Ω—É—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ª–∏–¥–æ–≤ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–æ–ª–µ–µ 30 –¥–Ω–µ–π',
    is_active: false,
    steps: 7,
    created_at: '2024-01-05T15:30:00Z',
    runs_count: 45,
  },
  {
    id: 4,
    name: '–û–ø—Ä–æ—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ 3 –¥–Ω—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏',
    is_active: true,
    steps: 4,
    created_at: '2024-01-18T12:00:00Z',
    last_run: '2024-01-20T16:45:00Z',
    runs_count: 56,
  },
];
